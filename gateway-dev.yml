    
spring:
  redis:
    host: "47.92.249.250"

    port: 6379
    jedis:
      pool:
        max-active: 20
        max-idle: 10
        max-wait: 10000
        min-idle: 2
hystrix:
  command:
    default:
      execution:
        timeout: #配置命令的执行，是否会超时
          enabled: true
        isolation: #命令的执行超时时间  超时将执行回退
          thread:
            timeoutInMilliseconds: 20000  # 响应的超时时间，默认是1s，即1000ms。这里的设置很奇怪，20000的设置，其实是5s限制。
zuul:
# 全局忽略敏感头信息
  sensitiveHeaders:
  routes:
    myProduct:   # 该处的myProduct如何命名都实际都没有影响（但是为了可读性，还是写规范一些）
      path: /myProduct/**
      serviceId: product
      sensitiveHeaders:     # ZuulProperties中private Set<String> sensitiveHeaders = new LinkedHashSet(Arrays.asList("Cookie", "Set-Cookie", "Authorization"));故zuul会拦截Cookie,Set-Coolie,Authorization三个属性，这里设置为空，即不拦截

    # 简洁写法（针对只需要写path与serviceId的情况
#    product: /myProduct/**

  # 排除某些路由，不允许外部访问以下地址（patterns，正则表示）
  ignored-patterns: # Set在yml中用-表示
    - /product/product/listForOrder
    - /myProduct/product/listForOrder
#    - /**/product/listForOrder
management:
  security:
    enabled: false  # 关闭管理权限要求，进而可以查看所有路由等
